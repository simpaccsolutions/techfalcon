resources:
  pipelines:
    - pipeline: bluefalcon # Name of the pipeline resource.
      source: simpaccsolutions.bluefalcon # The name of the pipeline referenced by this pipeline resource.
      project: SimpleAndAccurate # Required only if the source pipeline is in another project
      trigger: true # Run app-ci pipeline when any run of security-lib-ci completes
    - pipeline: greenfalcon # Name of the pipeline resource.
      source: simpaccsolutions.greenfalcon # The name of the pipeline referenced by this pipeline resource.
      project: SimpleAndAccurate # Required only if the source pipeline is in another project
      trigger: true # Run app-ci pipeline when any run of security-lib-ci completes

variables:
  - name: triggerBranch
    value: $[coalesce(resources.pipeline.bluefalcon.sourceBranch, resources.pipeline.greenfalcon.sourceBranch, variables['Build.SourceBranch'])]
  - name: triggerPipeline
    value: $[coalesce(resources.pipeline.bluefalcon.pipelineName, resources.pipeline.greenfalcon.pipelineName, 'direct')]
  - name: blueFalconTriggered
    value: $[ne(resources.pipeline.bluefalcon.runID, '')]
  - name: greenFalconTriggered
    value: $[ne(resources.pipeline.greenfalcon.runID, '')]
  - name: blueFalconBranch
    value: $[resources.pipeline.bluefalcon.sourceBranch]
  - name: greenFalconBranch
    value: $[resources.pipeline.greenfalcon.sourceBranch]

stages:
  - stage: Debug
    displayName: "Debug Information"
    jobs:
      - job: DebugJob
        displayName: "Debug Job"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - bash: |
              echo "=== DEBUG INFORMATION ==="
              echo "Build.SourceBranch: $(Build.SourceBranch)"
              echo "triggerBranch: $(triggerBranch)"
              echo "triggerPipeline: $(triggerPipeline)"
              echo "Build.Reason: $(Build.Reason)"
              echo "blueFalconTriggered: $(blueFalconTriggered)"
              echo "greenFalconTriggered: $(greenFalconTriggered)"
              echo "blueFalconBranch: $(blueFalconBranch)"
              echo "greenFalconBranch: $(greenFalconBranch)"
              echo "resources.pipeline.bluefalcon.sourceBranch: $(resources.pipeline.bluefalcon.sourceBranch)"
              echo "resources.pipeline.greenfalcon.sourceBranch: $(resources.pipeline.greenfalcon.sourceBranch)"
              echo "resources.pipeline.bluefalcon.runID: $(resources.pipeline.bluefalcon.runID)"
              echo "resources.pipeline.greenfalcon.runID: $(resources.pipeline.greenfalcon.runID)"
              echo "========================="
            displayName: "Print Debug Information"

  - stage: Development
    displayName: "Development Environment"
    dependsOn: Debug
    condition: |
      and(
        succeeded(),
        or(
          and(
            eq(variables['blueFalconTriggered'], 'True'),
            or(
              eq(variables['blueFalconBranch'], 'refs/heads/main'),
              startsWith(variables['blueFalconBranch'], 'refs/heads/dev/')
            )
          ),
          and(
            eq(variables['greenFalconTriggered'], 'True'),
            or(
              eq(variables['greenFalconBranch'], 'refs/heads/main'),
              startsWith(variables['greenFalconBranch'], 'refs/heads/dev/')
            )
          )
        )
      )
    jobs:
      - job: DevJob
        displayName: "Development Job"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - bash: |
              echo "Running in Development environment"
              echo "Triggered by pipeline: $(triggerPipeline)"
              echo "Triggered by branch: $(triggerBranch)"
            displayName: "Print Development Environment"

  - stage: Test
    displayName: "Test Environment"
    dependsOn: Debug
    condition: |
      and(
        succeeded(),
        or(
          and(
            eq(variables['blueFalconTriggered'], 'True'),
            or(
              startsWith(variables['blueFalconBranch'], 'refs/heads/test/'),
              startsWith(variables['blueFalconBranch'], 'refs/heads/prod/')
            )
          ),
          and(
            eq(variables['greenFalconTriggered'], 'True'),
            or(
              startsWith(variables['greenFalconBranch'], 'refs/heads/test/'),
              startsWith(variables['greenFalconBranch'], 'refs/heads/prod/')
            )
          )
        )
      )
    jobs:
      - job: TestJob
        displayName: "Test Job"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - bash: |
              echo "Running in Test environment"
              echo "Triggered by pipeline: $(triggerPipeline)"
              echo "Triggered by branch: $(triggerBranch)"
            displayName: "Print Test Environment"

  - stage: Production
    displayName: "Production Environment"
    dependsOn: Test
    condition: |
      and(
        succeeded('Test'),
        or(
          and(
            eq(variables['blueFalconTriggered'], 'True'),
            startsWith(variables['blueFalconBranch'], 'refs/heads/prod/')
          ),
          and(
            eq(variables['greenFalconTriggered'], 'True'),
            startsWith(variables['greenFalconBranch'], 'refs/heads/prod/')
          )
        )
      )
    jobs:
      - job: ProdJob
        displayName: "Production Job"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - bash: |
              echo "Running in Production environment"
              echo "Triggered by pipeline: $(triggerPipeline)"
              echo "Triggered by branch: $(triggerBranch)"
            displayName: "Print Production Environment"
